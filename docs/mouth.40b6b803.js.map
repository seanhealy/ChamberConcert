{"version":3,"sources":["mouth.js"],"names":["audioCtx","window","AudioContext","webkitAudioContext","oscillators","Array","playbyte","b","i","console","log","startPlaying","resetAll","stopPlaying","key","oscillator","createOscillator","type","frequency","value","connect","destination","start","undefined","stop","document","body","addEventListener","event","repeat","parseInt","match","charCodeAt"],"mappings":";AAGA,IAAIA,EAAW,IAAKC,OAAOC,cAAgBD,OAAOE,oBAG9CC,EAAc,IAAIC,MAAM,GAuB5B,SAASC,EAASC,GAEXC,IADLC,QAAQC,IAAI,cAAgBH,GACvBC,EAAI,EAAGA,EAAI,EAAGA,IACbD,EAAK,GAAKC,GACZG,EAAaH,EAAI,GAKvB,SAASI,IACFJ,IAAAA,EAAI,EAAGA,GAAK,EAAGA,IAClBK,EAAYL,GAIhB,SAASG,EAAaG,GAEhBV,IAAAA,EAAYU,EAAM,GAAlBV,CAGAW,IAAAA,EAAaf,EAASgB,mBAE1BD,EAAWE,KAAO,OAClBF,EAAWG,UAAUC,MAAQ,IAAM,IAAML,EACzCC,EAAWK,QAAQpB,EAASqB,aAC5BN,EAAWO,QACXlB,EAAYU,EAAM,GAAKC,GAGzB,SAASF,EAAYC,GAEU,OAAzBV,EAAYU,EAAM,SAAwCS,IAAzBnB,EAAYU,EAAM,KAGvDV,EAAYU,EAAM,GAAGU,OACrBpB,EAAYU,EAAM,GAAK,MAxDzBW,SAASC,KAAKC,iBAAiB,UAAW,SAAAC,GACpCA,EAAMC,SAGND,EAAMd,KAAO,KAAOc,EAAMd,KAAO,IACnCH,EAAamB,SAASF,EAAMd,MACnBc,EAAMd,IAAIiB,MAAM,WACzBzB,EAASsB,EAAMd,IAAIkB,WAAW,OAGlCP,SAASC,KAAKC,iBAAiB,QAAS,SAAAC,GAClCA,EAAMC,SAGND,EAAMd,KAAO,KAAOc,EAAMd,KAAO,IACnCD,EAAYiB,SAASF,EAAMd,MAClBc,EAAMd,IAAIiB,MAAM,WACzBnB","file":"mouth.40b6b803.js","sourceRoot":"..","sourcesContent":["//WARNING: VERY LOUD.  TURN DOWN YOUR SPEAKERS BEFORE TESTING\n\n// create web audio api context\nvar audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n\n// create Oscillator node\nvar oscillators = new Array(8);\n\ndocument.body.addEventListener(\"keydown\", event => {\n  if (event.repeat) {\n    return;\n  }\n  if (event.key >= \"1\" && event.key <= \"8\") {\n    startPlaying(parseInt(event.key));\n  } else if (event.key.match(/[a-z ]/)) {\n    playbyte(event.key.charCodeAt(0));\n  }\n});\ndocument.body.addEventListener(\"keyup\", event => {\n  if (event.repeat) {\n    return;\n  }\n  if (event.key >= \"1\" && event.key <= \"8\") {\n    stopPlaying(parseInt(event.key));\n  } else if (event.key.match(/[a-z ]/)) {\n    resetAll();\n  }\n});\n\nfunction playbyte(b) {\n  console.log(\"[playbyte] \" + b);\n  for (i = 0; i < 8; i++) {\n    if (b & (1 << i)) {\n      startPlaying(i + 1);\n    }\n  }\n}\n\nfunction resetAll() {\n  for (i = 1; i <= 8; i++) {\n    stopPlaying(i);\n  }\n}\n\nfunction startPlaying(key) {\n  //console.log(\"[start] \" + key);\n  if (oscillators[key - 1]) {\n    return;\n  }\n  var oscillator = audioCtx.createOscillator();\n\n  oscillator.type = \"sine\";\n  oscillator.frequency.value = 901 + 151 * key; // value in hertz\n  oscillator.connect(audioCtx.destination);\n  oscillator.start();\n  oscillators[key - 1] = oscillator;\n}\n\nfunction stopPlaying(key) {\n  //console.log(\"[stop] \" + event.key);\n  if (oscillators[key - 1] === null || oscillators[key - 1] === undefined) {\n    return;\n  }\n  oscillators[key - 1].stop();\n  oscillators[key - 1] = null;\n}\n"]}